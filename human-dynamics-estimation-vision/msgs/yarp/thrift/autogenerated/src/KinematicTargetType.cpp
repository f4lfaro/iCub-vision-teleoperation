/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <hde/msgs/KinematicTargetType.h>

namespace hde::msgs {

int32_t KinematicTargetTypeConverter::fromString(const std::string& input)
{
    if (input=="NONE") {
        return static_cast<int32_t>(NONE);
    }
    if (input=="POSE") {
        return static_cast<int32_t>(POSE);
    }
    if (input=="POSEANDVELOCITY") {
        return static_cast<int32_t>(POSEANDVELOCITY);
    }
    if (input=="POSITION") {
        return static_cast<int32_t>(POSITION);
    }
    if (input=="POSITIONANDVELOCITY") {
        return static_cast<int32_t>(POSITIONANDVELOCITY);
    }
    if (input=="ORIENTATION") {
        return static_cast<int32_t>(ORIENTATION);
    }
    if (input=="ORIENTATIONANDVELOCITY") {
        return static_cast<int32_t>(ORIENTATIONANDVELOCITY);
    }
    if (input=="GRAVITY") {
        return static_cast<int32_t>(GRAVITY);
    }
    if (input=="FLOORCONTACT") {
        return static_cast<int32_t>(FLOORCONTACT);
    }
    return -1;
}

std::string KinematicTargetTypeConverter::toString(int32_t input)
{
    switch(static_cast<KinematicTargetType>(input)) {
    case NONE:
        return "NONE";
    case POSE:
        return "POSE";
    case POSEANDVELOCITY:
        return "POSEANDVELOCITY";
    case POSITION:
        return "POSITION";
    case POSITIONANDVELOCITY:
        return "POSITIONANDVELOCITY";
    case ORIENTATION:
        return "ORIENTATION";
    case ORIENTATIONANDVELOCITY:
        return "ORIENTATIONANDVELOCITY";
    case GRAVITY:
        return "GRAVITY";
    case FLOORCONTACT:
        return "FLOORCONTACT";
    }
    return "";
}

} // namespace hde::msgs

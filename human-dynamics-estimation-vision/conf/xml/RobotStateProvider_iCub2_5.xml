<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE robot PUBLIC "-//YARP//DTD yarprobotinterface 3.0//EN" "http://www.yarp.it/DTD/yarprobotinterfaceV3.0.dtd">
<robot name="iCub-Retargeting" build=0 portprefix="">

    <device type="human_state_provider" name="RobotStateProvider">
        <param name="period">0.02</param>
        <param name="urdf">teleoperation_iCub_model_V_2_5.urdf</param>
        <param name="floatingBaseFrame">root_link_fake</param>
        <!-- ikSolver options: pairwised, global, dynamical -->
        <param name="ikSolver">dynamical</param>
        <param name="allowIKFailures">true</param>
        <param name="useDirectBaseMeasurement">false</param>
        <!-- optimization parameters -->
        <param name="maxIterationsIK">300</param>
        <param name="ikLinearSolver">ma27</param>
        <param name="ikPoolSizeOption">2</param>
        <param name="posTargetWeight">1.0</param>
        <param name="rotTargetWeight">1.0</param>
        <param name="costRegularization">1.0</param>
        <param name="costTolerance">0.001</param>
        <param name="rpcPortPrefix">iCub</param>
        <!-- inverse velocity kinematics parameters -->
        <!-- inverseVelocityKinematicsSolver values:
        QP
        moorePenrose,
        completeOrthogonalDecomposition,
        leastSquare,
        choleskyDecomposition,
        sparseCholeskyDecomposition,
        robustCholeskyDecomposition,
        sparseRobustCholeskyDecomposition -->
        <param name='inverseVelocityKinematicsSolver'>QP</param>
        <param name="linVelTargetWeight">1.0</param>
        <param name="angVelTargetWeight">1.0</param>
        <!-- integration based IK parameters -->
        <param name='dynamicalIKJointVelocityLimit'>10.0</param> <!-- comment or -1.0 for no limits -->
        <param name="dynamicalIKMeasuredVelocityGainLinRot">(1.0 1.0)</param>
        <param name="dynamicalIKCorrectionGainsLinRot">(2.0 10.0)</param>
        <param name="dynamicalIKIntegralCorrectionGainsLinRot">(0.0 0.0)</param>
        <group name="VISION_TARGETS">
            <param name="map_Pelvis">(root_link_fake, /dataPort, poseAndVelocity, 0)</param>
            <param name="map_T8">(chest_fake, /dataPort, orientationAndVelocity, 1)</param>
            <param name="map_Head">(head_fake, /dataPort, orientationAndVelocity, 2)</param>
            <param name="map_RightUpperArm">(r_upper_arm_fake, /dataPort, orientationAndVelocity, 3)</param>
            <param name="map_RightForeArm">(r_forearm_fake, /dataPort, orientationAndVelocity, 4)</param>
            <param name="map_RightHand">(r_hand_fake, /dataPort, orientationAndVelocity, 5)</param>
            <param name="map_LeftUpperArm">(l_upper_arm_fake, /dataPort, orientationAndVelocity, 6)</param>
            <param name="map_LeftForeArm">(l_forearm_fake, /dataPort, orientationAndVelocity, 7)</param>
            <param name="map_LeftHand">(l_hand_fake, /dataPort, orientationAndVelocity, 8)</param>
            <param name="map_RightUpperLeg">(r_upper_leg_fake, /dataPort, orientationAndVelocity, 9)</param>
            <param name="map_RightLowerLeg">(r_lower_leg_fake, /dataPort, orientationAndVelocity, 10)</param>
            <param name="map_RightFoot">(r_foot_fake, /dataPort, orientationAndVelocity, 11)</param>
            <param name="map_LeftUpperLeg">(l_upper_leg_fake, /dataPort, orientationAndVelocity, 12)</param>
            <param name="map_LeftLowerLeg">(l_lower_leg_fake, /dataPort, orientationAndVelocity, 13)</param>
            <param name="map_LeftFoot">(l_foot_fake, /dataPort, orientationAndVelocity, 14)</param>
        </group>
        <group name="CUSTOM_CONSTRAINTS">
        <!-- check issue https://github.com/robotology/human-dynamics-estimation/issues/132 for more info-->
        <!-- note that a group can not be empty, otherwise it returns error-->
        <!-- custom joint limits velocities-->
            <!--param name="custom_joints_velocity_limits_names">(neck_roll, neck_pitch)</param-->
            <param name="custom_joints_velocity_limits_names">(l_shoulder_pitch, l_shoulder_roll, l_shoulder_yaw, r_shoulder_pitch, r_shoulder_roll, r_shoulder_yaw, torso_roll, torso_pitch, torso_yaw)</param>
            <!-- the upper bound is "+", while the lower bounds are "-" -->
            <!--param name="custom_joints_velocity_limits_values">(10.0, 15.0)</param-->
            <param name="custom_joints_velocity_limits_values">(2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0)</param>
        <!-- **** base velocity limit: roll, pitch, yaw, x, y, z ****-->
            <!--param name="base_velocity_limit_upper_buond">(1.0, 1.0, 1.0, 1.0, 1.0, 1.0 )</param>
            <param name="base_velocity_limit_lower_buond">(-1.0, -1.0, -1.0, -1.0, -1.0, -1.0 )</param-->
        <!-- Custom joint Configuration constraints-->
        <!-- if the boudary value is inf, I will use -1000.0 rad, or +1000.0 rad-->
            <param name="custom_constraint_variables">(
            l_shoulder_pitch, l_shoulder_roll, l_shoulder_yaw, l_elbow, l_wrist_prosup,
            r_shoulder_pitch, r_shoulder_roll, r_shoulder_yaw, r_elbow, r_wrist_prosup)</param>
            <param name="custom_constraint_matrix"> (
            (1.7105, -1.7105,  0.0,     0.0,    0.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (1.7105, -1.7105,  -1.7105, 0.0,    0.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (0.0,    1.0,      1.0,     0.0,    0.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (0.0,    1.0,      0.0427,  0.0,    0.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (0.0,    1.0,      0.0,     0.0,    0.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (0.0,    0.0,      0.0,     2.5,    1.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (0.0,    0.0,      0.0,     -2.5,   1.0,    0.0,     0.0,      0.0,       0.0,    0.0),
            (0.0,    0.0,      0.0,     0.0,    0.0,    1.7105,  -1.7105,  0.0,       0.0,    0.0),
            (0.0,    0.0,      0.0,     0.0,    0.0,    1.7105,  -1.7105,  -1.7105,   0.0,    0.0,),
            (0.0,    0.0,      0.0,     0.0,    0.0,    0.0,     1.0,       1.0,      0.0,    0.0,),
            (0.0,    0.0,      0.0,     0.0,    0.0,    0.0,     1.0,       0.0427,   0.0,    0.0,),
            (0.0,    0.0,      0.0,     0.0,    0.0,    0.0,     1.0,       0.0,      0.0,    0.0,),
            (0.0,    0.0,      0.0,     0.0,    0.0,    0.0,     0.0,       0.0,      2.5,    1.0,),
            (0.0,    0.0,      0.0,     0.0,    0.0,    0.0,     0.0,       0.0,      -2.5,   1.0,),
            )</param>
            <param name="custom_constraint_lower_bound"> (
            -6.0563,  -6.3979,  -1.1623,  0.4611,  -1000.0,  -1000.0,  -5.2796,
            -6.0563,  -6.3979,  -1.1623,  0.4611,  -1000.0,  -1000.0,  -5.2796)</param>
            <param name="custom_constraint_upper_bound"> (
            1000.0,  1.9622,  3.7228,  1000.0,  1.7453,  5.2796,  1000.0,
            1000.0,  1.9622,  3.7228,  1000.0,  1.7453,  5.2796,  1000.0)</param>
            <param name="k_u">0.5</param>
            <param name="k_l">0.5</param>
        </group>
        
    </device>

    <!-- Uncomment to stream the output of HumanStateProvider on a YARP port -->
    <device type="human_state_wrapper" name="RobotStateWrapper">
        <param name="period">0.01</param>
        <param name="outputPort">/iCub/RobotStateWrapper/state:o</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStateWrapperLabel">RobotStateProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <device type="human_state_publisher" name="RobotStatePublisher">
        <param name="period">0.02</param>conf/xml/RobotStateProvider_iCub2_5.xml
        <param name="baseTFName">/iCub/root_link_fake</param>
        <param name="humanJointsTopic">/iCub/joint_states</param>
	<param name="portprefix">icub1</param>
	<param name="basePositionOffset">(0.0 3.0 0.0)</param>
	<!--param name="baseOrientationOffset">(0.7071068 0.0 0.0 0.7071068)</param-->
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStatePublisherLabel">RobotStateProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

</robot>
